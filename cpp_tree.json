{
    "translation_unit_0_10": "int test (int x, int y){\n    x = x+y;\n    y=x-x+y^2;\n    return y;\n}\n\nint test_two(int z, int a){\n    z = z;\n    a = a;\n    return z*a;\n}",
    "function_definition_0_4": "int test (int x, int y){\n    x = x+y;\n    y=x-x+y^2;\n    return y;\n}",
    "primitive_type_0_0": "int",
    "function_declarator_0_0": "test (int x, int y)",
    "identifier_0_0": "y",
    "parameter_list_0_0": "(int x, int y)",
    "(_0_0": "(",
    "parameter_declaration_0_0": "int y",
    ",_0_0": ",",
    ")_0_0": ")",
    "compound_statement_0_4": "{\n    x = x+y;\n    y=x-x+y^2;\n    return y;\n}",
    "{_0_0": "{",
    "expression_statement_1_1": "x = x+y;",
    "assignment_expression_1_1": "x = x+y",
    "identifier_1_1": "y",
    "=_1_1": "=",
    "binary_expression_1_1": "x+y",
    "+_1_1": "+",
    ";_1_1": ";",
    "expression_statement_2_2": "y=x-x+y^2;",
    "assignment_expression_2_2": "y=x-x+y^2",
    "identifier_2_2": "y",
    "=_2_2": "=",
    "binary_expression_2_2": "x-x",
    "-_2_2": "-",
    "+_2_2": "+",
    "^_2_2": "^",
    "number_literal_2_2": "2",
    ";_2_2": ";",
    "return_statement_3_3": "return y;",
    "return_3_3": "return",
    "identifier_3_3": "y",
    ";_3_3": ";",
    "}_4_4": "}",
    "function_definition_6_10": "int test_two(int z, int a){\n    z = z;\n    a = a;\n    return z*a;\n}",
    "primitive_type_6_6": "int",
    "function_declarator_6_6": "test_two(int z, int a)",
    "identifier_6_6": "a",
    "parameter_list_6_6": "(int z, int a)",
    "(_6_6": "(",
    "parameter_declaration_6_6": "int a",
    ",_6_6": ",",
    ")_6_6": ")",
    "compound_statement_6_10": "{\n    z = z;\n    a = a;\n    return z*a;\n}",
    "{_6_6": "{",
    "expression_statement_7_7": "z = z;",
    "assignment_expression_7_7": "z = z",
    "identifier_7_7": "z",
    "=_7_7": "=",
    ";_7_7": ";",
    "expression_statement_8_8": "a = a;",
    "assignment_expression_8_8": "a = a",
    "identifier_8_8": "a",
    "=_8_8": "=",
    ";_8_8": ";",
    "return_statement_9_9": "return z*a;",
    "return_9_9": "return",
    "binary_expression_9_9": "z*a",
    "identifier_9_9": "a",
    "*_9_9": "*",
    ";_9_9": ";",
    "}_10_10": "}"
}