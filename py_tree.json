{
    "module_0_9": "def test (x, y):\n    x = x+y\n    y=x-x+y^2\n    return y\n\ndef test_two(z, a):\n    z = z\n    a = a\n    return z*a\n",
    "function_definition_0_3": "def test (x, y):\n    x = x+y\n    y=x-x+y^2\n    return y",
    "def_0_0": "def",
    "identifier_0_0": "y",
    "parameters_0_0": "(x, y)",
    "(_0_0": "(",
    ",_0_0": ",",
    ")_0_0": ")",
    ":_0_0": ":",
    "block_1_3": "x = x+y\n    y=x-x+y^2\n    return y",
    "expression_statement_1_1": "x = x+y",
    "assignment_1_1": "x = x+y",
    "identifier_1_1": "y",
    "=_1_1": "=",
    "binary_operator_1_1": "x+y",
    "+_1_1": "+",
    "expression_statement_2_2": "y=x-x+y^2",
    "assignment_2_2": "y=x-x+y^2",
    "identifier_2_2": "y",
    "=_2_2": "=",
    "binary_operator_2_2": "x-x",
    "-_2_2": "-",
    "+_2_2": "+",
    "^_2_2": "^",
    "integer_2_2": "2",
    "return_statement_3_3": "return y",
    "return_3_3": "return",
    "identifier_3_3": "y",
    "function_definition_5_8": "def test_two(z, a):\n    z = z\n    a = a\n    return z*a",
    "def_5_5": "def",
    "identifier_5_5": "a",
    "parameters_5_5": "(z, a)",
    "(_5_5": "(",
    ",_5_5": ",",
    ")_5_5": ")",
    ":_5_5": ":",
    "block_6_8": "z = z\n    a = a\n    return z*a",
    "expression_statement_6_6": "z = z",
    "assignment_6_6": "z = z",
    "identifier_6_6": "z",
    "=_6_6": "=",
    "expression_statement_7_7": "a = a",
    "assignment_7_7": "a = a",
    "identifier_7_7": "a",
    "=_7_7": "=",
    "return_statement_8_8": "return z*a",
    "return_8_8": "return",
    "binary_operator_8_8": "z*a",
    "identifier_8_8": "a",
    "*_8_8": "*"
}